(self.webpackChunknode_ave_docs=self.webpackChunknode_ave_docs||[]).push([[613],{3905:function(e,n,c){"use strict";c.d(n,{Zo:function(){return h},kt:function(){return d}});var t=c(7294);function o(e,n,c){return n in e?Object.defineProperty(e,n,{value:c,enumerable:!0,configurable:!0,writable:!0}):e[n]=c,e}function r(e,n){var c=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),c.push.apply(c,t)}return c}function l(e){for(var n=1;n<arguments.length;n++){var c=null!=arguments[n]?arguments[n]:{};n%2?r(Object(c),!0).forEach((function(n){o(e,n,c[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(c)):r(Object(c)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(c,n))}))}return e}function a(e,n){if(null==e)return{};var c,t,o=function(e,n){if(null==e)return{};var c,t,o={},r=Object.keys(e);for(t=0;t<r.length;t++)c=r[t],n.indexOf(c)>=0||(o[c]=e[c]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)c=r[t],n.indexOf(c)>=0||Object.prototype.propertyIsEnumerable.call(e,c)&&(o[c]=e[c])}return o}var i=t.createContext({}),k=function(e){var n=t.useContext(i),c=n;return e&&(c="function"==typeof e?e(n):l(l({},n),e)),c},h=function(e){var n=k(e.components);return t.createElement(i.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},u=t.forwardRef((function(e,n){var c=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,h=a(e,["components","mdxType","originalType","parentName"]),u=k(c),d=o,x=u["".concat(i,".").concat(d)]||u[d]||s[d]||r;return c?t.createElement(x,l(l({ref:n},h),{},{components:c})):t.createElement(x,l({ref:n},h))}));function d(e,n){var c=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=c.length,l=new Array(r);l[0]=u;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var k=2;k<r;k++)l[k]=c[k];return t.createElement.apply(null,l)}return t.createElement.apply(null,c)}u.displayName="MDXCreateElement"},9515:function(e,n,c){"use strict";c.r(n),c.d(n,{frontMatter:function(){return a},contentTitle:function(){return i},metadata:function(){return k},toc:function(){return h},default:function(){return u}});var t=c(2122),o=c(9756),r=(c(7294),c(3905)),l=["components"],a={id:"check-box",title:"CheckBox \u591a\u9009\u6846"},i=void 0,k={unversionedId:"check-box",id:"check-box",isDocsHomePage:!1,title:"CheckBox \u591a\u9009\u6846",description:"\x3c!-- ## \u7b80\u4ecb",source:"@site/i18n/zh-cn/docusaurus-plugin-content-docs/current/check-box.md",sourceDirName:".",slug:"/check-box",permalink:"/Ave-Nodejs-Docs/zh-cn/check-box",version:"current",frontMatter:{id:"check-box",title:"CheckBox \u591a\u9009\u6846"},sidebar:"components",previous:{title:"Progress \u8fdb\u5ea6\u6761",permalink:"/Ave-Nodejs-Docs/zh-cn/progress"},next:{title:"MessageBox \u6d88\u606f\u6846",permalink:"/Ave-Nodejs-Docs/zh-cn/message-box"}},h=[{value:"\u4f8b\u5b50",id:"examples",children:[{value:"\u57fa\u672c\u7528\u6cd5",id:"example-basic",children:[]},{value:"\u6837\u5f0f",id:"example-style",children:[]},{value:"\u72b6\u6001",id:"example-triple",children:[]},{value:"\u8bbe\u7f6e\u6587\u5b57\u989c\u8272",id:"example-text-color",children:[]}]},{value:"\u7ec3\u4e60\u7b54\u6848",id:"practice-solutions",children:[{value:"select all",id:"solution-select-all",children:[]}]}],s={toc:h};function u(e){var n=e.components,a=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,t.Z)({},s,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"examples"},"\u4f8b\u5b50"),(0,r.kt)("h3",{id:"example-basic"},"\u57fa\u672c\u7528\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5-6}","{5-6}":!0},"import { Window, CheckBox, CheckValue } from 'ave-ui';\n\nexport function main(window: Window) {\n    const checkBox = new CheckBox(window);\n    checkBox.SetText('Apple');\n    checkBox.OnCheck((sender: CheckBox) => {\n        const checkValue = sender.GetValue();\n        console.log(`check value: ${checkValue}(${CheckValue[checkValue]})`);\n    });\n\n    const container = getControlDemoContainer(window);\n    container.ControlAdd(checkBox).SetGrid(1, 1);\n    window.SetContent(container);\n}\n")),(0,r.kt)("p",null,"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6f14\u793a\u4e86\u591a\u9009\u6846\u7684\u57fa\u672c\u7528\u6cd5\uff1a\u52fe\u9009\u4e0e\u53d6\u6d88\u52fe\u9009"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box basic",src:c(3345).Z})),(0,r.kt)("p",null,"\u53e6\u5916\uff0c\u63a7\u5236\u53f0\u4f1a\u6709\u8fd9\u6837\u7684\u8f93\u51fa\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"check value: 1(Checked)\ncheck value: 0(Unchecked)\ncheck value: 1(Checked)\ncheck value: 0(Unchecked)\n")),(0,r.kt)("p",null,"\u8fd9\u662f\u8bbe\u7f6e\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"OnCheck"),"\u56de\u8c03\u7684\u539f\u56e0\u3002\u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8bbe\u7f6e",(0,r.kt)("inlineCode",{parentName:"p"},"OnChecking"),"\u56de\u8c03\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2-4}","{2-4}":!0},"checkBox.SetText('Apple');\ncheckBox.OnChecking((sender: CheckBox) => {\n    return false;\n});\ncheckBox.OnCheck((sender: CheckBox) => {\n    const checkValue = sender.GetValue();\n    console.log(`check value: ${checkValue}(${CheckValue[checkValue]})`);\n});\n")),(0,r.kt)("p",null,"\u5b83\u7684\u8fd4\u56de\u503c\u63a7\u5236\u52fe\u9009\u662f\u5426\u751f\u6548\uff0c\u6bd4\u5982\u50cf\u4e0a\u9762\u8fd9\u6837\u8fd4\u56de",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"\u7684\u8bdd\uff0c\u52fe\u9009\u5c31\u4e0d\u4f1a\u751f\u6548:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box on checking",src:c(2154).Z})),(0,r.kt)("p",null,"\u800c\u4e14\u89c2\u5bdf\u63a7\u5236\u53f0\u6211\u4eec\u53d1\u73b0\u6ca1\u6709\u8f93\u51fa\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a",(0,r.kt)("inlineCode",{parentName:"p"},"OnCheck"),"\u4e5f\u4e0d\u4f1a\u88ab\u8c03\u7528\u3002"),(0,r.kt)("h4",{id:"api-basic"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBox extends IControl {\n    SetText(text: string): CheckBox;\n    GetText(): string;\n\n    SetValue(value: CheckValue): CheckBox;\n    GetValue(): CheckValue;\n\n    OnCheck(callback: (sender: CheckBox) => void): CheckBox;\n    OnChecking(callback: (sender: CheckBox) => boolean): CheckBox;\n}\n\nexport enum CheckValue {\n    Unchecked,\n    Checked,\n    Mixed,\n}\n")),(0,r.kt)("h3",{id:"example-style"},"\u6837\u5f0f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{9,17}","{9,17}":!0},"import { Window, CheckBox, CheckBoxStyle } from 'ave-ui';\n\nexport function main(window: Window) {\n    const container = getControlDemoContainer(window, 3);\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBox.SetText('Apple');\n        checkBox.SetCheckBoxStyle(CheckBoxStyle.Checking);\n\n        container.ControlAdd(checkBox).SetGrid(1, 1);\n    }\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBox.SetText('Apple');\n        checkBox.SetCheckBoxStyle(CheckBoxStyle.Pushing);\n\n        container.ControlAdd(checkBox).SetGrid(3, 1);\n    }\n\n    window.SetContent(container);\n}\n")),(0,r.kt)("p",null,"\u9664\u4e86\u9ed8\u8ba4\u7684\u6837\u5f0f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u628a\u5b83\u8bbe\u7f6e\u6210\u6309\u94ae\u5f0f\u7684\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box style",src:c(7576).Z})),(0,r.kt)("h4",{id:"api-style"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBox extends IControl {\n    SetCheckBoxStyle(style: CheckBoxStyle): CheckBox;\n    GetCheckBoxStyle(): CheckBoxStyle;\n}\n\nexport enum CheckBoxStyle {\n    Checking,\n    Pushing,\n}\n")),(0,r.kt)("h3",{id:"example-triple"},"\u72b6\u6001"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{9,17}","{9,17}":!0},"import { Window, CheckBox, CheckBoxStyle } from 'ave-ui';\n\nexport function main(window: Window) {\n    const container = getControlDemoContainer(window, 3);\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBox.SetText('Check all');\n        checkBox.SetTriple(true);\n\n        container.ControlAdd(checkBox).SetGrid(1, 1);\n    }\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBox.SetText('Check all');\n        checkBox.SetTriple(true);\n        checkBox.SetCheckBoxStyle(CheckBoxStyle.Pushing);\n\n        container.ControlAdd(checkBox).SetGrid(3, 1);\n    }\n\n    window.SetContent(container);\n}\n")),(0,r.kt)("p",null,"\u9664\u4e86\u52fe\u9009/\u6ca1\u52fe\u9009\uff0c\u591a\u9009\u6846\u8fd8\u6709\u53e6\u4e00\u79cd\u72b6\u6001\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"Mixed"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box triple",src:c(5223).Z})),(0,r.kt)("h4",{id:"api-style"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{9}","{9}":!0},"export interface ICheckBox extends IControl {\n    SetTriple(enableTriple: boolean): CheckBox;\n    GetTriple(): boolean;\n}\n\nexport enum CheckValue {\n    Unchecked,\n    Checked,\n    Mixed,\n}\n")),(0,r.kt)("h4",{id:"practice-select-all"},"\u7ec3\u4e60: select all"),(0,r.kt)("p",null,"\u8fd9\u4e2a\u7ec3\u4e60\u7684\u76ee\u7684\u662f\u5b9e\u73b0\u7c7b\u4f3c web \u4e2d\u7684\u5168\u9009\u6548\u679c\uff0c\u4f8b\u5982 ",(0,r.kt)("a",{parentName:"p",href:"https://ant.design/components/checkbox-cn/"},"Ant Design CheckBox"),"\uff0c\u5728 Ave \u4e2d\u5982\u4f55\u5b9e\u73b0\u5982\u4e0b\u6548\u679c\u5462\uff1f"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box practice select all",src:c(9360).Z})),(0,r.kt)("h3",{id:"example-text-color"},"\u8bbe\u7f6e\u6587\u5b57\u989c\u8272"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{7,8}","{7,8}":!0},"import { Window, CheckBox, Vec4 } from 'ave-ui';\n\nexport function main(window: Window) {\n    const checkBox = new CheckBox(window);\n    checkBox.SetText('Apple');\n\n    const lightBlue = new Vec4(0, 146, 255, 255 * 0.75);\n    checkBox.SetTextColor(lightBlue);\n\n    const container = getControlDemoContainer(window);\n    container.ControlAdd(checkBox).SetGrid(1, 1);\n    window.SetContent(container);\n}\n")),(0,r.kt)("p",null,"\u8fd0\u884c\u4e4b\u540e\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box text color",src:c(7582).Z})),(0,r.kt)("h4",{id:"api-text-color"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBox extends IControl {}\nexport interface IControl {\n    SetTextColor(color: Vec4): IControl;\n    GetTextColor(): Vec4;\n}\n")),(0,r.kt)("h2",{id:"practice-solutions"},"\u7ec3\u4e60\u7b54\u6848"),(0,r.kt)("h3",{id:"solution-select-all"},"select all"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"#practice-select-all"},"\u7ec3\u4e60\u63cf\u8ff0"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { Window, CheckBox, Grid, CheckValue } from 'ave-ui';\n\nexport function main(window: Window) {\n    const container = getControlDemoContainer(window);\n\n    //\n    let useAllCheckbox: CheckBox = null;\n\n    //\n    const checkBoxes: CheckBox[] = [];\n    const updateCheckBoxes = (checkAll: boolean) => {\n        checkBoxes.forEach((each) =>\n            each.SetValue(checkAll ? CheckValue.Checked : CheckValue.Unchecked),\n        );\n    };\n\n    //\n    const currentChecked: Set<string> = new Set();\n    const updateCurrentChecked = (name: string, checked: boolean) => {\n        if (checked) {\n            currentChecked.add(name);\n        } else {\n            currentChecked.delete(name);\n        }\n\n        if (currentChecked.size === 0) {\n            useAllCheckbox.SetValue(CheckValue.Unchecked);\n        } else if (currentChecked.size === checkBoxes.length) {\n            useAllCheckbox.SetValue(CheckValue.Checked);\n        } else {\n            useAllCheckbox.SetValue(CheckValue.Mixed);\n        }\n    };\n\n    //\n    const checkBoxCallback = (sender: CheckBox) => {\n        const checkValue = sender.GetValue();\n        updateCurrentChecked(\n            sender.GetText(),\n            checkValue === CheckValue.Checked,\n        );\n    };\n\n    //\n    {\n        const checkBox = new CheckBox(window);\n        useAllCheckbox = checkBox;\n\n        checkBox.SetText('Use all');\n        checkBox.SetTriple(true);\n        checkBox.OnChecking((sender: CheckBox) => {\n            const current = sender.GetValue();\n            console.log('current', current);\n            console.log('next', sender.GetNextValue());\n\n            if (current === CheckValue.Unchecked) {\n                updateCheckBoxes(true);\n                return true;\n            } else if (current === CheckValue.Checked) {\n                checkBox.SetValue(CheckValue.Unchecked);\n                updateCheckBoxes(false);\n                return false;\n            } else if (current === CheckValue.Mixed) {\n                checkBox.SetValue(CheckValue.Checked);\n                updateCheckBoxes(true);\n                return false;\n            }\n        });\n\n        container.ControlAdd(checkBox).SetGrid(1, 1);\n    }\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBoxes.push(checkBox);\n\n        checkBox.SetText('React');\n        checkBox.OnCheck(checkBoxCallback);\n\n        container.ControlAdd(checkBox).SetGrid(1, 2);\n    }\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBoxes.push(checkBox);\n\n        checkBox.SetText('Vue');\n        checkBox.OnCheck(checkBoxCallback);\n\n        container.ControlAdd(checkBox).SetGrid(2, 2);\n    }\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBoxes.push(checkBox);\n\n        checkBox.SetText('Svelte');\n        checkBox.OnCheck(checkBoxCallback);\n\n        container.ControlAdd(checkBox).SetGrid(3, 2);\n    }\n\n    window.SetContent(container);\n}\n\nfunction getControlDemoContainer(window: Window, count = 1) {\n    const container = new Grid(window);\n    container.ColAddSlice(1);\n    container.ColAddDpx(...Array.from<number>({ length: count }).fill(120));\n    container.ColAddDpx(...Array.from<number>({ length: count }).fill(120));\n    container.ColAddSlice(1);\n\n    container.RowAddSlice(1);\n    container.RowAddDpx(...Array.from<number>({ length: count }).fill(32));\n    container.RowAddDpx(...Array.from<number>({ length: count }).fill(32));\n    container.RowAddSlice(1);\n    return container;\n}\n")))}u.isMDXComponent=!0},3345:function(e,n,c){"use strict";n.Z=c.p+"assets/images/check-box-basic-8cb2d31ff4ed8930c439ad12e43e6b73.gif"},2154:function(e,n,c){"use strict";n.Z=c.p+"assets/images/check-box-on-checking-e982e81ed35b87d65959de64fc5c754f.gif"},9360:function(e,n,c){"use strict";n.Z=c.p+"assets/images/check-box-practice-select-all-2fe73d84aba5d11b8b93384b3461ee3c.gif"},7576:function(e,n,c){"use strict";n.Z=c.p+"assets/images/check-box-style-2e3f81686888a9e222268b45ec929f50.gif"},7582:function(e,n,c){"use strict";n.Z=c.p+"assets/images/check-box-text-color-0c5efc1d56d546070e868c30e8c29b2d.gif"},5223:function(e,n,c){"use strict";n.Z=c.p+"assets/images/check-box-triple-edd8452bac65a3ab0bae8574a4d5cec2.gif"}}]);