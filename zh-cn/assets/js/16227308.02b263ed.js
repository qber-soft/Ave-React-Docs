(self.webpackChunkave_react_docs=self.webpackChunkave_react_docs||[]).push([[613],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return k}});var c=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);n&&(c=c.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,c)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,c,o=function(e,n){if(null==e)return{};var t,c,o={},r=Object.keys(e);for(c=0;c<r.length;c++)t=r[c],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(c=0;c<r.length;c++)t=r[c],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=c.createContext({}),i=function(e){var n=c.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=i(e.components);return c.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return c.createElement(c.Fragment,{},n)}},h=c.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),h=i(t),k=o,d=h["".concat(s,".").concat(k)]||h[k]||p[k]||r;return t?c.createElement(d,l(l({ref:n},u),{},{components:t})):c.createElement(d,l({ref:n},u))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=h;var a={};for(var s in n)hasOwnProperty.call(n,s)&&(a[s]=n[s]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var i=2;i<r;i++)l[i]=t[i];return c.createElement.apply(null,l)}return c.createElement.apply(null,t)}h.displayName="MDXCreateElement"},9515:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return s},metadata:function(){return i},toc:function(){return u},default:function(){return h}});var c=t(2122),o=t(9756),r=(t(7294),t(3905)),l=["components"],a={id:"check-box",title:"CheckBox \u591a\u9009\u6846"},s=void 0,i={unversionedId:"check-box",id:"check-box",isDocsHomePage:!1,title:"CheckBox \u591a\u9009\u6846",description:"\x3c!-- ## \u7b80\u4ecb",source:"@site/i18n/zh-cn/docusaurus-plugin-content-docs/current/check-box.md",sourceDirName:".",slug:"/check-box",permalink:"/Ave-React-Docs/zh-cn/check-box",version:"current",frontMatter:{id:"check-box",title:"CheckBox \u591a\u9009\u6846"},sidebar:"components",previous:{title:"Progress \u8fdb\u5ea6\u6761",permalink:"/Ave-React-Docs/zh-cn/progress"},next:{title:"MessageBox \u6d88\u606f\u6846",permalink:"/Ave-React-Docs/zh-cn/message-box"}},u=[{value:"\u4f8b\u5b50",id:"examples",children:[{value:"\u57fa\u672c\u7528\u6cd5",id:"example-basic",children:[]},{value:"\u6837\u5f0f",id:"example-style",children:[]},{value:"\u72b6\u6001",id:"example-triple",children:[]},{value:"\u8bbe\u7f6e\u6587\u5b57\u989c\u8272",id:"example-text-color",children:[]}]},{value:"\u7ec3\u4e60\u7b54\u6848",id:"practice-solutions",children:[{value:"select all",id:"solution-select-all",children:[]}]}],p={toc:u};function h(e){var n=e.components,a=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,c.Z)({},p,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"examples"},"\u4f8b\u5b50"),(0,r.kt)("h3",{id:"example-basic"},"\u57fa\u672c\u7528\u6cd5"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox\n                    text="Apple"\n                    onCheck={(sender) => {\n                        const checkValue = sender.GetValue();\n                        console.log(\n                            `check value: ${checkValue}(${CheckValue[checkValue]})`,\n                        );\n                    }}\n                ></CheckBox>\n            </DemoLayout>\n        </Window>\n    );\n}\n')),(0,r.kt)("p",null,"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u6f14\u793a\u4e86\u591a\u9009\u6846\u7684\u57fa\u672c\u7528\u6cd5\uff1a\u52fe\u9009\u4e0e\u53d6\u6d88\u52fe\u9009"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box basic",src:t(3345).Z})),(0,r.kt)("p",null,"\u53e6\u5916\uff0c\u63a7\u5236\u53f0\u4f1a\u6709\u8fd9\u6837\u7684\u8f93\u51fa\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"check value: 1(Checked)\ncheck value: 0(Unchecked)\ncheck value: 1(Checked)\ncheck value: 0(Unchecked)\n")),(0,r.kt)("p",null,"\u8fd9\u662f\u8bbe\u7f6e\u4e86",(0,r.kt)("inlineCode",{parentName:"p"},"onCheck"),"\u56de\u8c03\u7684\u539f\u56e0\u3002\u53e6\u5916\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u8bbe\u7f6e",(0,r.kt)("inlineCode",{parentName:"p"},"onChecking"),"\u56de\u8c03\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{14}","{14}":!0},'export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox\n                    text="Apple"\n                    onCheck={(sender) => {\n                        const checkValue = sender.GetValue();\n                        console.log(\n                            `check value: ${checkValue}(${CheckValue[checkValue]})`,\n                        );\n                    }}\n                    onChecking={(sender) => {\n                        return false;\n                    }}\n                ></CheckBox>\n            </DemoLayout>\n        </Window>\n    );\n}\n')),(0,r.kt)("p",null,"\u5b83\u7684\u8fd4\u56de\u503c\u63a7\u5236\u52fe\u9009\u662f\u5426\u751f\u6548\uff0c\u6bd4\u5982\u50cf\u4e0a\u9762\u8fd9\u6837\u8fd4\u56de",(0,r.kt)("inlineCode",{parentName:"p"},"false"),"\u7684\u8bdd\uff0c\u52fe\u9009\u5c31\u4e0d\u4f1a\u751f\u6548:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box on checking",src:t(2154).Z})),(0,r.kt)("p",null,"\u800c\u4e14\u89c2\u5bdf\u63a7\u5236\u53f0\u6211\u4eec\u53d1\u73b0\u6ca1\u6709\u8f93\u51fa\uff0c\u6240\u4ee5\u5b9e\u9645\u4e0a",(0,r.kt)("inlineCode",{parentName:"p"},"onCheck"),"\u4e5f\u4e0d\u4f1a\u88ab\u8c03\u7528\u3002"),(0,r.kt)("h4",{id:"api-basic"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBoxComponentProps extends IComponentProps {\n    text: string;\n    onCheck?: Parameters<ICheckBox['OnCheck']>[0];\n    onChecking?: Parameters<ICheckBox['OnChecking']>[0];\n}\n\nexport enum CheckValue {\n    Unchecked,\n    Checked,\n    Mixed,\n}\n")),(0,r.kt)("h3",{id:"example-style"},"\u6837\u5f0f"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{8,14}","{8,14}":!0},"export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox\n                    text=\"Apple\"\n                    style={{\n                        visualStyle: CheckBoxStyle.Checking,\n                    }}\n                ></CheckBox>\n                <CheckBox\n                    text=\"Apple\"\n                    style={{\n                        visualStyle: CheckBoxStyle.Pushing,\n                    }}\n                ></CheckBox>\n            </DemoLayout>\n        </Window>\n    );\n}\n\ninterface IDemoLayoutProps {\n    children?: any[] | any;\n    width?: string;\n    height?: string;\n}\n\nfunction DemoLayout(props: IDemoLayoutProps) {\n    const width = props?.width ?? '120dpx';\n    const height = props?.height ?? '32dpx';\n\n    const demoLayout = {\n        columns: `1 ${width} ${width} ${width} 1`,\n        rows: `1 ${height} 1`,\n        areas: {\n            left: { row: 1, column: 1 },\n            right: { row: 1, column: 3 },\n        },\n    };\n    const [left, right] = props.children;\n    return (\n        <Grid style={{ layout: demoLayout }}>\n            <Grid style={{ area: demoLayout.areas.left }}>{left}</Grid>\n            <Grid style={{ area: demoLayout.areas.right }}>{right}</Grid>\n        </Grid>\n    );\n}\n")),(0,r.kt)("p",null,"\u9664\u4e86\u9ed8\u8ba4\u7684\u6837\u5f0f\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u628a\u5b83\u8bbe\u7f6e\u6210\u6309\u94ae\u5f0f\u7684\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box style",src:t(7576).Z})),(0,r.kt)("h4",{id:"api-style"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBoxComponentProps extends IComponentProps {\n    style?: ICheckBoxStyle;\n}\n\nexport interface ICheckBoxStyle extends IComponentStyle {\n    visualStyle?: CheckBoxStyle;\n}\n\nexport enum CheckBoxStyle {\n    Checking,\n    Pushing,\n}\n")),(0,r.kt)("h3",{id:"example-triple"},"\u72b6\u6001"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox text="Apple" triple></CheckBox>\n                <CheckBox\n                    text="Apple"\n                    triple\n                    style={{ visualStyle: CheckBoxStyle.Pushing }}\n                ></CheckBox>\n            </DemoLayout>\n        </Window>\n    );\n}\n')),(0,r.kt)("p",null,"\u9664\u4e86\u52fe\u9009/\u6ca1\u52fe\u9009\uff0c\u591a\u9009\u6846\u8fd8\u6709\u53e6\u4e00\u79cd\u72b6\u6001\uff1a",(0,r.kt)("inlineCode",{parentName:"p"},"Mixed"),":"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box triple",src:t(5223).Z})),(0,r.kt)("h4",{id:"api-style"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBoxComponentProps extends IComponentProps {\n    triple?: boolean;\n}\n")),(0,r.kt)("h4",{id:"practice-select-all"},"\u7ec3\u4e60: select all"),(0,r.kt)("p",null,"\u8fd9\u4e2a\u7ec3\u4e60\u7684\u76ee\u7684\u662f\u5b9e\u73b0\u7c7b\u4f3c web \u4e2d\u7684\u5168\u9009\u6548\u679c\uff0c\u4f8b\u5982 ",(0,r.kt)("a",{parentName:"p",href:"https://ant.design/components/checkbox-cn/"},"Ant Design CheckBox"),"\uff0c\u5728 Ave \u4e2d\u5982\u4f55\u5b9e\u73b0\u5982\u4e0b\u6548\u679c\u5462\uff1f"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box practice select all",src:t(9360).Z})),(0,r.kt)("h3",{id:"example-text-color"},"\u8bbe\u7f6e\u6587\u5b57\u989c\u8272"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},'export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox\n                    text="Apple"\n                    style={{ color: new Vec4(0, 146, 255, 255 * 0.75) }}\n                ></CheckBox>\n            </DemoLayout>\n        </Window>\n    );\n}\n')),(0,r.kt)("p",null,"\u8fd0\u884c\u4e4b\u540e\uff1a"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box text color",src:t(7582).Z})),(0,r.kt)("h4",{id:"api-text-color"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBoxComponentProps extends IComponentProps {\n    style?: ICheckBoxStyle;\n}\n\nexport interface ICheckBoxStyle extends IComponentStyle {\n    color?: Vec4;\n}\n")),(0,r.kt)("h2",{id:"practice-solutions"},"\u7ec3\u4e60\u7b54\u6848"),(0,r.kt)("h3",{id:"solution-select-all"},"select all"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"#practice-select-all"},"\u7ec3\u4e60\u63cf\u8ff0"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-tsx"},"export function App() {\n    const options = ['React', 'Vue', 'Svelte'];\n    const [checkedSet, setCheckedSet] = useState(new Set<string>());\n    const [valueCheckAll, setValueCheckAll] = useState(CheckValue.Unchecked);\n\n    const onCheck: ICheckBoxComponentProps['onCheck'] = (sender) => {\n        const text = sender.GetText();\n        const checkValue = sender.GetValue();\n        const clone = new Set(checkedSet);\n\n        if (checkValue === CheckValue.Checked) {\n            clone.add(text);\n        } else if (checkValue === CheckValue.Unchecked) {\n            clone.delete(text);\n        }\n\n        setCheckedSet(clone);\n    };\n\n    const onCheckingAll: ICheckBoxComponentProps['onChecking'] = (sender) => {\n        const next = sender.GetNextValue();\n        if (\n            valueCheckAll === CheckValue.Unchecked &&\n            next === CheckValue.Checked\n        ) {\n            setCheckedSet(new Set(options));\n        } else if (\n            valueCheckAll === CheckValue.Checked &&\n            next === CheckValue.Mixed\n        ) {\n            setCheckedSet(new Set());\n        } else if (\n            valueCheckAll === CheckValue.Mixed &&\n            next === CheckValue.Unchecked\n        ) {\n            setCheckedSet(new Set(options));\n        }\n\n        return false;\n    };\n\n    useEffect(() => {\n        if (checkedSet.size === options.length) {\n            setValueCheckAll(CheckValue.Checked);\n        } else if (checkedSet.size === 0) {\n            setValueCheckAll(CheckValue.Unchecked);\n        } else {\n            setValueCheckAll(CheckValue.Mixed);\n        }\n    }, [checkedSet]);\n\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox\n                    text=\"Use all\"\n                    triple\n                    value={valueCheckAll}\n                    onChecking={onCheckingAll}\n                ></CheckBox>\n                {...options.map((each) => (\n                    <CheckBox\n                        key={each}\n                        text={each}\n                        onCheck={onCheck}\n                        value={\n                            checkedSet.has(each)\n                                ? CheckValue.Checked\n                                : CheckValue.Unchecked\n                        }\n                    ></CheckBox>\n                ))}\n            </DemoLayout>\n        </Window>\n    );\n}\n\ninterface IDemoLayoutProps {\n    children?: any[] | any;\n    width?: string;\n    height?: string;\n}\n\nfunction DemoLayout(props: IDemoLayoutProps) {\n    const width = props?.width ?? '120dpx';\n    const height = props?.height ?? '32dpx';\n\n    const demoLayout = {\n        columns: `1 ${width} ${width} ${width} 1`,\n        rows: `1 ${height} ${height} 1`,\n        areas: {\n            useAll: { row: 1, column: 1 },\n            react: { row: 2, column: 1 },\n            vue: { row: 2, column: 2 },\n            svelte: { row: 2, column: 3 },\n        },\n    };\n    const [useAll, react, vue, svelte] = props.children;\n\n    return (\n        <Grid style={{ layout: demoLayout }}>\n            <Grid style={{ area: demoLayout.areas.useAll }}>{useAll}</Grid>\n            <Grid style={{ area: demoLayout.areas.react }}>{react}</Grid>\n            <Grid style={{ area: demoLayout.areas.vue }}>{vue}</Grid>\n            <Grid style={{ area: demoLayout.areas.svelte }}>{svelte}</Grid>\n        </Grid>\n    );\n}\n")))}h.isMDXComponent=!0},3345:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-basic-8cb2d31ff4ed8930c439ad12e43e6b73.gif"},2154:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-on-checking-e982e81ed35b87d65959de64fc5c754f.gif"},9360:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-practice-select-all-2fe73d84aba5d11b8b93384b3461ee3c.gif"},7576:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-style-2e3f81686888a9e222268b45ec929f50.gif"},7582:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-text-color-0c5efc1d56d546070e868c30e8c29b2d.gif"},5223:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-triple-edd8452bac65a3ab0bae8574a4d5cec2.gif"}}]);