(self.webpackChunkave_react_docs=self.webpackChunkave_react_docs||[]).push([[605],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return d}});var c=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);n&&(c=c.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,c)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,c,o=function(e,n){if(null==e)return{};var t,c,o={},r=Object.keys(e);for(c=0;c<r.length;c++)t=r[c],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(c=0;c<r.length;c++)t=r[c],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=c.createContext({}),k=function(e){var n=c.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=k(e.components);return c.createElement(i.Provider,{value:n},e.children)},h={inlineCode:"code",wrapper:function(e){var n=e.children;return c.createElement(c.Fragment,{},n)}},u=c.forwardRef((function(e,n){var t=e.components,o=e.mdxType,r=e.originalType,i=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),u=k(t),d=o,x=u["".concat(i,".").concat(d)]||u[d]||h[d]||r;return t?c.createElement(x,l(l({ref:n},s),{},{components:t})):c.createElement(x,l({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var r=t.length,l=new Array(r);l[0]=u;var a={};for(var i in n)hasOwnProperty.call(n,i)&&(a[i]=n[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,l[1]=a;for(var k=2;k<r;k++)l[k]=t[k];return c.createElement.apply(null,l)}return c.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9396:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return i},metadata:function(){return k},toc:function(){return s},default:function(){return u}});var c=t(2122),o=t(9756),r=(t(7294),t(3905)),l=["components"],a={id:"check-box",title:"CheckBox"},i=void 0,k={unversionedId:"check-box",id:"check-box",isDocsHomePage:!1,title:"CheckBox",description:"Examples",source:"@site/docs/check-box.md",sourceDirName:".",slug:"/check-box",permalink:"/Ave-React-Docs/check-box",version:"current",frontMatter:{id:"check-box",title:"CheckBox"},sidebar:"components",previous:{title:"Progress",permalink:"/Ave-React-Docs/progress"},next:{title:"MessageBox",permalink:"/Ave-React-Docs/message-box"}},s=[{value:"Examples",id:"examples",children:[{value:"Basic",id:"example-basic",children:[]},{value:"Style",id:"example-style",children:[]},{value:"Status",id:"example-triple",children:[]},{value:"Text Color",id:"example-text-color",children:[]}]},{value:"Practice Solutions",id:"practice-solutions",children:[{value:"select all",id:"solution-select-all",children:[]}]}],h={toc:s};function u(e){var n=e.components,a=(0,o.Z)(e,l);return(0,r.kt)("wrapper",(0,c.Z)({},h,a,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"example-basic"},"Basic"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5-6}","{5-6}":!0},"import { Window, CheckBox, CheckValue } from 'ave-ui';\n\nexport function main(window: Window) {\n    const checkBox = new CheckBox(window);\n    checkBox.SetText('Apple');\n    checkBox.OnCheck((sender: CheckBox) => {\n        const checkValue = sender.GetValue();\n        console.log(`check value: ${checkValue}(${CheckValue[checkValue]})`);\n    });\n\n    const container = getControlDemoContainer(window);\n    container.ControlAdd(checkBox).SetGrid(1, 1);\n    window.SetContent(container);\n}\n")),(0,r.kt)("p",null,"Usage:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box basic",src:t(1898).Z})),(0,r.kt)("p",null,"In console:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"check value: 1(Checked)\ncheck value: 0(Unchecked)\ncheck value: 1(Checked)\ncheck value: 0(Unchecked)\n")),(0,r.kt)("p",null,"Return false in ",(0,r.kt)("inlineCode",{parentName:"p"},"OnChecking")," to cancel action. ",(0,r.kt)("inlineCode",{parentName:"p"},"OnCheck")," will not be invoked in this case."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2-4}","{2-4}":!0},"checkBox.SetText('Apple');\ncheckBox.OnChecking((sender: CheckBox) => {\n    return false;\n});\ncheckBox.OnCheck((sender: CheckBox) => {\n    const checkValue = sender.GetValue();\n    console.log(`check value: ${checkValue}(${CheckValue[checkValue]})`);\n});\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box on checking",src:t(6251).Z})),(0,r.kt)("h4",{id:"api-basic"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBox extends IControl {\n    SetText(text: string): CheckBox;\n    GetText(): string;\n\n    SetValue(value: CheckValue): CheckBox;\n    GetValue(): CheckValue;\n\n    OnCheck(callback: (sender: CheckBox) => void): CheckBox;\n    OnChecking(callback: (sender: CheckBox) => boolean): CheckBox;\n}\n\nexport enum CheckValue {\n    Unchecked,\n    Checked,\n    Mixed,\n}\n")),(0,r.kt)("h3",{id:"example-style"},"Style"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{9,17}","{9,17}":!0},"import { Window, CheckBox, CheckBoxStyle } from 'ave-ui';\n\nexport function main(window: Window) {\n    const container = getControlDemoContainer(window, 3);\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBox.SetText('Apple');\n        checkBox.SetCheckBoxStyle(CheckBoxStyle.Checking);\n\n        container.ControlAdd(checkBox).SetGrid(1, 1);\n    }\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBox.SetText('Apple');\n        checkBox.SetCheckBoxStyle(CheckBoxStyle.Pushing);\n\n        container.ControlAdd(checkBox).SetGrid(3, 1);\n    }\n\n    window.SetContent(container);\n}\n")),(0,r.kt)("p",null,"Check box in button style:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box style",src:t(6718).Z})),(0,r.kt)("h4",{id:"api-style"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBox extends IControl {\n    SetCheckBoxStyle(style: CheckBoxStyle): CheckBox;\n    GetCheckBoxStyle(): CheckBoxStyle;\n}\n\nexport enum CheckBoxStyle {\n    Checking,\n    Pushing,\n}\n")),(0,r.kt)("h3",{id:"example-triple"},"Status"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{9,17}","{9,17}":!0},"import { Window, CheckBox, CheckBoxStyle } from 'ave-ui';\n\nexport function main(window: Window) {\n    const container = getControlDemoContainer(window, 3);\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBox.SetText('Check all');\n        checkBox.SetTriple(true);\n\n        container.ControlAdd(checkBox).SetGrid(1, 1);\n    }\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBox.SetText('Check all');\n        checkBox.SetTriple(true);\n        checkBox.SetCheckBoxStyle(CheckBoxStyle.Pushing);\n\n        container.ControlAdd(checkBox).SetGrid(3, 1);\n    }\n\n    window.SetContent(container);\n}\n")),(0,r.kt)("p",null,"Mixed status:"),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box triple",src:t(3143).Z})),(0,r.kt)("h4",{id:"api-style"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{9}","{9}":!0},"export interface ICheckBox extends IControl {\n    SetTriple(enableTriple: boolean): CheckBox;\n    GetTriple(): boolean;\n}\n\nexport enum CheckValue {\n    Unchecked,\n    Checked,\n    Mixed,\n}\n")),(0,r.kt)("h4",{id:"practice-select-all"},"Practice: select all"),(0,r.kt)("p",null,"In this practice, we will implement select-all: ",(0,r.kt)("a",{parentName:"p",href:"https://ant.design/components/checkbox/"},"Ant Design: CheckBox"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box practice select all",src:t(1391).Z})),(0,r.kt)("h3",{id:"example-text-color"},"Text Color"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{7,8}","{7,8}":!0},"import { Window, CheckBox, Vec4 } from 'ave-ui';\n\nexport function main(window: Window) {\n    const checkBox = new CheckBox(window);\n    checkBox.SetText('Apple');\n\n    const lightBlue = new Vec4(0, 146, 255, 255 * 0.75);\n    checkBox.SetTextColor(lightBlue);\n\n    const container = getControlDemoContainer(window);\n    container.ControlAdd(checkBox).SetGrid(1, 1);\n    window.SetContent(container);\n}\n")),(0,r.kt)("p",null,(0,r.kt)("img",{alt:"check box text color",src:t(5367).Z})),(0,r.kt)("h4",{id:"api-text-color"},"API"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBox extends IControl {}\nexport interface IControl {\n    SetTextColor(color: Vec4): IControl;\n    GetTextColor(): Vec4;\n}\n")),(0,r.kt)("h2",{id:"practice-solutions"},"Practice Solutions"),(0,r.kt)("h3",{id:"solution-select-all"},"select all"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("a",{parentName:"p",href:"#practice-select-all"},"Practice description"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"import { Window, CheckBox, Grid, CheckValue } from 'ave-ui';\n\nexport function main(window: Window) {\n    const container = getControlDemoContainer(window);\n\n    //\n    let useAllCheckbox: CheckBox = null;\n\n    //\n    const checkBoxes: CheckBox[] = [];\n    const updateCheckBoxes = (checkAll: boolean) => {\n        checkBoxes.forEach((each) =>\n            each.SetValue(checkAll ? CheckValue.Checked : CheckValue.Unchecked),\n        );\n    };\n\n    //\n    const currentChecked: Set<string> = new Set();\n    const updateCurrentChecked = (name: string, checked: boolean) => {\n        if (checked) {\n            currentChecked.add(name);\n        } else {\n            currentChecked.delete(name);\n        }\n\n        if (currentChecked.size === 0) {\n            useAllCheckbox.SetValue(CheckValue.Unchecked);\n        } else if (currentChecked.size === checkBoxes.length) {\n            useAllCheckbox.SetValue(CheckValue.Checked);\n        } else {\n            useAllCheckbox.SetValue(CheckValue.Mixed);\n        }\n    };\n\n    //\n    const checkBoxCallback = (sender: CheckBox) => {\n        const checkValue = sender.GetValue();\n        updateCurrentChecked(\n            sender.GetText(),\n            checkValue === CheckValue.Checked,\n        );\n    };\n\n    //\n    {\n        const checkBox = new CheckBox(window);\n        useAllCheckbox = checkBox;\n\n        checkBox.SetText('Use all');\n        checkBox.SetTriple(true);\n        checkBox.OnChecking((sender: CheckBox) => {\n            const current = sender.GetValue();\n            console.log('current', current);\n            console.log('next', sender.GetNextValue());\n\n            if (current === CheckValue.Unchecked) {\n                updateCheckBoxes(true);\n                return true;\n            } else if (current === CheckValue.Checked) {\n                checkBox.SetValue(CheckValue.Unchecked);\n                updateCheckBoxes(false);\n                return false;\n            } else if (current === CheckValue.Mixed) {\n                checkBox.SetValue(CheckValue.Checked);\n                updateCheckBoxes(true);\n                return false;\n            }\n        });\n\n        container.ControlAdd(checkBox).SetGrid(1, 1);\n    }\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBoxes.push(checkBox);\n\n        checkBox.SetText('React');\n        checkBox.OnCheck(checkBoxCallback);\n\n        container.ControlAdd(checkBox).SetGrid(1, 2);\n    }\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBoxes.push(checkBox);\n\n        checkBox.SetText('Vue');\n        checkBox.OnCheck(checkBoxCallback);\n\n        container.ControlAdd(checkBox).SetGrid(2, 2);\n    }\n\n    {\n        const checkBox = new CheckBox(window);\n        checkBoxes.push(checkBox);\n\n        checkBox.SetText('Svelte');\n        checkBox.OnCheck(checkBoxCallback);\n\n        container.ControlAdd(checkBox).SetGrid(3, 2);\n    }\n\n    window.SetContent(container);\n}\n\nfunction getControlDemoContainer(window: Window, count = 1) {\n    const container = new Grid(window);\n    container.ColAddSlice(1);\n    container.ColAddDpx(...Array.from<number>({ length: count }).fill(120));\n    container.ColAddDpx(...Array.from<number>({ length: count }).fill(120));\n    container.ColAddSlice(1);\n\n    container.RowAddSlice(1);\n    container.RowAddDpx(...Array.from<number>({ length: count }).fill(32));\n    container.RowAddDpx(...Array.from<number>({ length: count }).fill(32));\n    container.RowAddSlice(1);\n    return container;\n}\n")))}u.isMDXComponent=!0},1898:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-basic-8cb2d31ff4ed8930c439ad12e43e6b73.gif"},6251:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-on-checking-e982e81ed35b87d65959de64fc5c754f.gif"},1391:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-practice-select-all-2fe73d84aba5d11b8b93384b3461ee3c.gif"},6718:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-style-2e3f81686888a9e222268b45ec929f50.gif"},5367:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-text-color-0c5efc1d56d546070e868c30e8c29b2d.gif"},3143:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-triple-edd8452bac65a3ab0bae8574a4d5cec2.gif"}}]);