(self.webpackChunkave_react_docs=self.webpackChunkave_react_docs||[]).push([[707],{3905:function(t,e,n){"use strict";n.d(e,{Zo:function(){return s},kt:function(){return d}});var o=n(7294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function u(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,o,r=function(t,e){if(null==t)return{};var n,o,r={},a=Object.keys(t);for(o=0;o<a.length;o++)n=a[o],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(o=0;o<a.length;o++)n=a[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var i=o.createContext({}),l=function(t){var e=o.useContext(i),n=e;return t&&(n="function"==typeof t?t(e):u(u({},e),t)),n},s=function(t){var e=l(t.components);return o.createElement(i.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},m=o.forwardRef((function(t,e){var n=t.components,r=t.mdxType,a=t.originalType,i=t.parentName,s=c(t,["components","mdxType","originalType","parentName"]),m=l(n),d=r,f=m["".concat(i,".").concat(d)]||m[d]||p[d]||a;return n?o.createElement(f,u(u({ref:e},s),{},{components:n})):o.createElement(f,u({ref:e},s))}));function d(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var a=n.length,u=new Array(a);u[0]=m;var c={};for(var i in e)hasOwnProperty.call(e,i)&&(c[i]=e[i]);c.originalType=t,c.mdxType="string"==typeof t?t:r,u[1]=c;for(var l=2;l<a;l++)u[l]=n[l];return o.createElement.apply(null,u)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9619:function(t,e,n){"use strict";n.r(e),n.d(e,{frontMatter:function(){return c},contentTitle:function(){return i},metadata:function(){return l},toc:function(){return s},default:function(){return m}});var o=n(2122),r=n(9756),a=(n(7294),n(3905)),u=["components"],c={id:"button",title:"Button"},i=void 0,l={unversionedId:"button",id:"button",isDocsHomePage:!1,title:"Button",description:"Examples",source:"@site/docs/button.md",sourceDirName:".",slug:"/button",permalink:"/Ave-React-Docs/button",version:"current",frontMatter:{id:"button",title:"Button"},sidebar:"components",previous:{title:"Layout",permalink:"/Ave-React-Docs/layout"},next:{title:"ComboBox",permalink:"/Ave-React-Docs/combo-box"}},s=[{value:"Examples",id:"examples",children:[{value:"Set Text",id:"example-set-text",children:[]},{value:"Text Color",id:"example-set-text-color",children:[]},{value:"Button Visual Style",id:"example-button-visual-style",children:[]},{value:"Click Event",id:"example-button-event-click",children:[]},{value:"Button Icon",id:"example-set-icon",children:[]}]}],p={toc:s};function m(t){var e=t.components,c=(0,r.Z)(t,u);return(0,a.kt)("wrapper",(0,o.Z)({},p,c,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("h3",{id:"example-set-text"},"Set Text"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{5}","{5}":!0},"export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <Button text=\"Button\"></Button>\n            </DemoLayout>\n        </Window>\n    );\n}\n\n// boilerplate code: place control at the center of window\ninterface IDemoLayoutProps {\n    children?: any[] | any;\n    width?: string;\n    height?: string;\n}\n\nfunction DemoLayout(props: IDemoLayoutProps) {\n    const width = props?.width ?? '120dpx';\n    const height = props?.height ?? '32dpx';\n\n    const demoLayout = {\n        columns: `1 ${width} 1`,\n        rows: `1 ${height} 1`,\n        areas: {\n            center: { row: 1, column: 1 },\n        },\n    };\n    return (\n        <Grid style={{ layout: demoLayout }}>\n            <Grid style={{ area: demoLayout.areas.center }}>\n                {props.children}\n            </Grid>\n        </Grid>\n    );\n}\n")),(0,a.kt)("p",null,':) Button with text "Button":'),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"button set text",src:n(2007).Z})),(0,a.kt)("h4",{id:"api-button-set-text"},"API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IButtonComponentProps extends IComponentProps {\n    text?: string;\n    ...\n}\n")),(0,a.kt)("h3",{id:"example-set-text-color"},"Text Color"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{7}","{7}":!0},'export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <Button\n                    text="Button"\n                    style={{ color: new Vec4(0, 146, 255, 255 * 0.75) }}\n                ></Button>\n            </DemoLayout>\n        </Window>\n    );\n}\n')),(0,a.kt)("p",null,"Light blue button text:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"button text color",src:n(583).Z})),(0,a.kt)("h4",{id:"api-button-text-color"},"API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IButtonComponentProps extends IComponentProps {\n  style?: IButtonStyle;\n  ...\n}\n\nexport interface IButtonStyle extends IComponentStyle {\n  color?: Vec4;\n  ...\n}\n")),(0,a.kt)("h3",{id:"example-button-visual-style"},"Button Visual Style"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{7,11}","{7,11}":!0},'export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <Button\n                    text="Button"\n                    style={{ visualStyle: ButtonStyle.Command }}\n                ></Button>\n                <Button\n                    text="Button"\n                    style={{ visualStyle: ButtonStyle.Push }}\n                ></Button>\n            </DemoLayout>\n        </Window>\n    );\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"ButtonStyle.Command: no depth effect, just plain button"),(0,a.kt)("li",{parentName:"ul"},"ButtonStyle.Push: likes real button, with feedback of depth effect when you press it")),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"button style",src:n(2427).Z})),(0,a.kt)("h4",{id:"api-button-visual-style"},"API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IButtonStyle extends IComponentStyle {\n  visualStyle?: ButtonStyle;\n  ...\n}\n\nexport enum ButtonStyle {\n    Push,\n    Command,\n}\n")),(0,a.kt)("h3",{id:"example-button-event-click"},"Click Event"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{9}","{9}":!0},"export function App() {\n    const [text, setText] = useState('Button');\n\n    return (\n        <Window>\n            <DemoLayout>\n                <Button\n                    text={text}\n                    onClick={() => setText('Button Clicked')}\n                ></Button>\n            </DemoLayout>\n        </Window>\n    );\n}\n")),(0,a.kt)("p",null,"Click and set text:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"button event click",src:n(6696).Z})),(0,a.kt)("h4",{id:"api-button-event-click"},"API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},'export interface IButtonComponentProps extends IComponentProps {\n  onClick?: Parameters<IButton["OnClick"]>[0];\n}\n')),(0,a.kt)("h3",{id:"example-set-icon"},"Button Icon"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{14}","{14}":!0},"import { iconResource } from './icon-resource';\n\nfunction onInit(app: App) {\n    const context = getAppContext();\n    context.setIconResource(iconResource as unknown as IIconResource);\n}\n\nexport function App() {\n    return (\n        <Window onInit={onInit}>\n            <DemoLayout>\n                <Button\n                    text=\"Open\"\n                    iconInfo={{ name: 'open-file', size: 16 }}\n                ></Button>\n            </DemoLayout>\n        </Window>\n    );\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx",metastring:'title="icon-resource.ts"',title:'"icon-resource.ts"'},"const iconResource = {\n    size: [16],\n    path: {\n        'open-file': [assetsPath('open-file#0.png')],\n    },\n} as const;\n\nexport { iconResource };\n\nexport type IconResourceMapType = Record<\n    keyof typeof iconResource.path,\n    number\n>;\n")),(0,a.kt)("p",null,"You can add icon alongside text:"),(0,a.kt)("p",null,(0,a.kt)("img",{alt:"button set icon",src:n(3289).Z})),(0,a.kt)("h4",{id:"api-set-icon"},"API"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IButtonComponentProps extends IComponentProps {\n    iconInfo?: {\n        name: string;\n        size?: number;\n    };\n    ...\n}\n")))}m.isMDXComponent=!0},6696:function(t,e,n){"use strict";e.Z=n.p+"assets/images/button-event-click-418d5d9eb2a8ea061b4228248aa46f0c.gif"},3289:function(t,e,n){"use strict";e.Z=n.p+"assets/images/button-set-icon-7df1ffbcf7134ea480b0ad301d31392f.png"},2007:function(t,e,n){"use strict";e.Z=n.p+"assets/images/button-set-text-896efc9135f2d3c726add01f7b95255d.png"},2427:function(t,e,n){"use strict";e.Z=n.p+"assets/images/button-style-dec5deee21cfef98dd17656a34a81767.gif"},583:function(t,e,n){"use strict";e.Z=n.p+"assets/images/button-text-color-e38971a5e4f1c8cf517fccff2695644c.png"}}]);