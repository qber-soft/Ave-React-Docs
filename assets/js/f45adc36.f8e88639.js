(self.webpackChunkave_react_docs=self.webpackChunkave_react_docs||[]).push([[571],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return l},kt:function(){return y}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),p=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},l=function(e){var n=p(e.components);return r.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=p(t),y=o,f=d["".concat(s,".").concat(y)]||d[y]||u[y]||a;return t?r.createElement(f,c(c({ref:n},l),{},{components:t})):r.createElement(f,c({ref:n},l))}));function y(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=t[p];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},2844:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return l},default:function(){return d}});var r=t(2122),o=t(9756),a=(t(7294),t(3905)),c=["components"],i={id:"keyboard",title:"Keyboard"},s=void 0,p={unversionedId:"keyboard",id:"keyboard",isDocsHomePage:!1,title:"Keyboard",description:"Examples",source:"@site/docs/keyboard.md",sourceDirName:".",slug:"/keyboard",permalink:"/Ave-React-Docs/keyboard",version:"current",frontMatter:{id:"keyboard",title:"Keyboard"},sidebar:"components",previous:{title:"Theme",permalink:"/Ave-React-Docs/theme"},next:{title:"Mouse",permalink:"/Ave-React-Docs/mouse"}},l=[{value:"Examples",id:"examples",children:[{value:"WSAD",id:"example-wsad",children:[]}]}],u={toc:l};function d(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("h3",{id:"example-wsad"},"WSAD"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},'export function App() {\n    useEffect(() => {\n        const context = getAppContext();\n        const window = context.getWindow();\n\n        // hk: hot key\n        const hkW = window.HotkeyRegister(KbKey.W, 0);\n        const hkS = window.HotkeyRegister(KbKey.S, 0);\n        const hkA = window.HotkeyRegister(KbKey.A, 0);\n        const hkD = window.HotkeyRegister(KbKey.D, 0);\n\n        window.OnWindowHotkey((sender, nId, key, n) => {\n            switch (nId) {\n                case hkW:\n                    console.log("press w");\n                    break;\n                case hkS:\n                    console.log("press s");\n                    break;\n                case hkA:\n                    console.log("press a");\n                    break;\n                case hkD:\n                    console.log("press d");\n                    break;\n            }\n        });\n    }, []);\n\n    return <Window></Window>;\n}\n')),(0,a.kt)("p",null,"This example shows how to echo ",(0,a.kt)("inlineCode",{parentName:"p"},"wsad")," when you press it, in console:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"press w\npress s\npress a\npress d\n")),(0,a.kt)("h4",{id:"api-hot-key"},"API"),(0,a.kt)("p",null,"Register hotkey and get ref number to it:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export type IWindow<T> = {\n    HotkeyRegister(key: KbKey, n: InputModifier): number;\n}\n\nexport enum KbKey {\n    None,\n\n    // Function\n    Escape,\n    F1,\n    F2,\n    F3,\n    ...\n\n    A,\n    B,\n    C,\n    D,\n    E,\n    F,\n    G,\n    H,\n    I,\n    J,\n    K,\n    L,\n    M,\n    ...\n}\n\nexport enum InputModifier {\n    // Keyboard\n    LControl /**/ = 0x00000001,\n    LShift /**/ = 0x00000002,\n    LMenu /**/ = 0x00000004,\n    LSys /**/ = 0x00000008,\n    RControl /**/ = 0x00000010,\n    ...\n\n    // Pointer\n    Button1 /**/ = 0x00000100,\n    Button2 /**/ = 0x00000200,\n    ...\n}\n")),(0,a.kt)("p",null,"Use ref number in callback:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"export type IWindow<T> = {\n    OnWindowHotkey(\n        fn: (sender: T, nId: number, key: KbKey, n: InputModifier) => void,\n    ): T;\n};\n")))}d.isMDXComponent=!0}}]);