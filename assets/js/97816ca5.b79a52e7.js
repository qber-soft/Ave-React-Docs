(self.webpackChunkave_react_docs=self.webpackChunkave_react_docs||[]).push([[71],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),u=l(t),p=a,x=u["".concat(s,".").concat(p)]||u[p]||m[p]||i;return t?r.createElement(x,o(o({ref:n},d),{},{components:t})):r.createElement(x,o({ref:n},d))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=u;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<i;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},531:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return d},default:function(){return u}});var r=t(2122),a=t(9756),i=(t(7294),t(3905)),o=["components"],c={id:"rich-list-box",title:"RichListBox"},s=void 0,l={unversionedId:"rich-list-box",id:"rich-list-box",isDocsHomePage:!1,title:"RichListBox",description:"Examples",source:"@site/docs/rich-list-box.md",sourceDirName:".",slug:"/rich-list-box",permalink:"/Ave-React-Docs/rich-list-box",version:"current",frontMatter:{id:"rich-list-box",title:"RichListBox"},sidebar:"components",previous:{title:"ListBox",permalink:"/Ave-React-Docs/list-box"},next:{title:"Progress",permalink:"/Ave-React-Docs/progress"}},d=[{value:"Examples",id:"examples",children:[{value:"Basic",id:"example-basic",children:[]}]}],m={toc:d};function u(e){var n=e.components,c=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,c,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("h3",{id:"example-basic"},"Basic"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"import {\n    Window,\n    RichListBoxItemVirtual,\n    Grid,\n    RichListBox,\n    HeaderItem,\n    HeaderItemFormat,\n    DpiSize,\n} from 'ave-ui';\n\nexport function main(window: Window) {\n    const richListBox = new RichListBox(window);\n\n    // create columns\n    const headers = [\n        {\n            name: 'ID',\n            align: HeaderItemFormat.Center,\n            size: DpiSize.FromPixelScaled(200),\n        },\n        {\n            name: 'Name',\n            align: HeaderItemFormat.Center,\n            size: DpiSize.FromPixelScaled(200),\n        },\n    ];\n    headers.forEach((header) => {\n        const headerItem = new HeaderItem(\n            header.align,\n            header.name,\n            header.size,\n        );\n        richListBox.GetHeader().Add(headerItem);\n    });\n\n    // set data\n    const data = [\n        { id: 1, name: 'a' },\n        { id: 2, name: 'b' },\n        { id: 3, name: 'c' },\n        { id: 4, name: 'd' },\n        { id: 5, name: 'e' },\n        { id: 6, name: 'f' },\n    ];\n    richListBox.SetVirtual((sender, rowIndex, headerIndex) => {\n        const item = new RichListBoxItemVirtual();\n        const itemData = data[rowIndex];\n        switch (headerIndex) {\n            case 0:\n                item.String = itemData.id.toString();\n                break;\n            case 1:\n                item.String = itemData.name;\n                break;\n        }\n        return item;\n    });\n    richListBox.ItemSetCount(data.length);\n\n    // handle event\n    richListBox.OnSelectionEnd((sender) => {\n        const itemIndex = sender.ItemGetSelection();\n        console.log(itemIndex);\n    });\n\n    //\n    const container = getControlDemoContainer(window);\n    container.ControlAdd(richListBox).SetGrid(1, 1);\n    window.SetContent(container);\n}\n\nfunction getControlDemoContainer(window: Window, count = 1) {\n    const container = new Grid(window);\n    container.ColAddSlice(1);\n    container.ColAddDpx(...Array.from<number>({ length: count }).fill(410));\n    container.ColAddSlice(1);\n\n    container.RowAddSlice(1);\n    container.RowAddDpx(...Array.from<number>({ length: count }).fill(300));\n    container.RowAddSlice(1);\n    return container;\n}\n")),(0,i.kt)("p",null,"This example shows the basic usage of rich list box:"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"rich list box basic",src:t(4516).Z})),(0,i.kt)("p",null,"In console:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"0\n2\n4\n")),(0,i.kt)("p",null,"This example is a bit complex, however, the skeleton is clear."),(0,i.kt)("p",null,"Create columns and you can see the basic structure of the list:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{17}","{17}":!0},"...\nconst headers = [\n  {\n    name: 'ID',\n    align: HeaderItemFormat.Center,\n    size: DpiSize.FromPixelScaled(200),\n  },\n  {\n    name: 'Name',\n    align: HeaderItemFormat.Center,\n    size: DpiSize.FromPixelScaled(200),\n  },\n];\n\nheaders.forEach((header) => {\n  const headerItem = new HeaderItem(header.align, header.name, header.size);\n  richListBox.GetHeader().Add(headerItem);\n});\n...\n")),(0,i.kt)("p",null,"Prepare data for columns you add, in this example, they are ",(0,i.kt)("inlineCode",{parentName:"p"},"ID")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"Name"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{11,25}","{11,25}":!0},"...\nconst data = [\n  {id: 1, name: 'a'},\n  {id: 2, name: 'b'},\n  {id: 3, name: 'c'},\n  {id: 4, name: 'd'},\n  {id: 5, name: 'e'},\n  {id: 6, name: 'f'},\n];\n\nrichListBox.SetVirtual((sender, rowIndex /* index of row */, headerIndex /* index of column */) => {\n  const item = new RichListBoxItemVirtual();\n  const itemData = data[rowIndex];\n  switch (headerIndex) {\n    case 0:\n      item.String = itemData.id.toString();\n      break;\n    case 1:\n      item.String = itemData.name;\n      break;\n  }\n  return item;\n});\n\nrichListBox.ItemSetCount(data.length);\n...\n")),(0,i.kt)("p",null,"Note: index is 0-based."),(0,i.kt)("p",null,"Set data in callback and use ",(0,i.kt)("inlineCode",{parentName:"p"},"ItemSetCount")," to set number of rows you want to display."),(0,i.kt)("p",null,"Print selected row index in console:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"...\nrichListBox.OnSelectionEnd((sender) => {\n  const itemIndex = sender.ItemGetSelection();\n  console.log(itemIndex);\n});\n...\n")),(0,i.kt)("h4",{id:"api-basic"},"API"),(0,i.kt)("p",null,"Add ",(0,i.kt)("inlineCode",{parentName:"p"},"HeaderItem"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IRichListBox extends IControl {\n    GetHeader(): Header;\n}\n\nexport class Header extends (AveLib.UiHeader as IHeader) {}\nexport interface IHeader extends IControl {\n    Add(item: HeaderItem): Header;\n}\n")),(0,i.kt)("p",null,"Set data:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IRichListBox extends IControl {\n    // use row index and column index(headerIndex) to find and set data of each item\n    SetVirtual(\n        callback: (\n            sender: RichListBox,\n            rowIndex: number,\n            headerIndex: number,\n        ) => RichListBoxItemVirtual,\n    ): RichListBox;\n\n    //\n    ItemSetCount(rowCount: number): RichListBox;\n}\n\nexport class RichListBoxItemVirtual {\n    // text content of list item\n    String: string = '';\n}\n")),(0,i.kt)("p",null,"Handle event:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IRichListBox extends IControl {\n    OnSelectionEnd(callback: (sender: RichListBox) => void): RichListBox;\n}\n")))}u.isMDXComponent=!0},4516:function(e,n,t){"use strict";n.Z=t.p+"assets/images/rich-list-box-basic-52e973e97ddfb07f93741fa75e072ebe.gif"}}]);