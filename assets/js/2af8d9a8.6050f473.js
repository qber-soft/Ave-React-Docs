(self.webpackChunkave_react_docs=self.webpackChunkave_react_docs||[]).push([[605],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return k}});var c=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);n&&(c=c.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,c)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function r(e,n){if(null==e)return{};var t,c,o=function(e,n){if(null==e)return{};var t,c,o={},l=Object.keys(e);for(c=0;c<l.length;c++)t=l[c],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(c=0;c<l.length;c++)t=l[c],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=c.createContext({}),i=function(e){var n=c.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=i(e.components);return c.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return c.createElement(c.Fragment,{},n)}},h=c.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=r(e,["components","mdxType","originalType","parentName"]),h=i(t),k=o,d=h["".concat(s,".").concat(k)]||h[k]||p[k]||l;return t?c.createElement(d,a(a({ref:n},u),{},{components:t})):c.createElement(d,a({ref:n},u))}));function k(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,a=new Array(l);a[0]=h;var r={};for(var s in n)hasOwnProperty.call(n,s)&&(r[s]=n[s]);r.originalType=e,r.mdxType="string"==typeof e?e:o,a[1]=r;for(var i=2;i<l;i++)a[i]=t[i];return c.createElement.apply(null,a)}return c.createElement.apply(null,t)}h.displayName="MDXCreateElement"},9396:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return r},contentTitle:function(){return s},metadata:function(){return i},toc:function(){return u},default:function(){return h}});var c=t(2122),o=t(9756),l=(t(7294),t(3905)),a=["components"],r={id:"check-box",title:"CheckBox"},s=void 0,i={unversionedId:"check-box",id:"check-box",isDocsHomePage:!1,title:"CheckBox",description:"Examples",source:"@site/docs/check-box.md",sourceDirName:".",slug:"/check-box",permalink:"/Ave-React-Docs/check-box",version:"current",frontMatter:{id:"check-box",title:"CheckBox"},sidebar:"components",previous:{title:"Progress",permalink:"/Ave-React-Docs/progress"},next:{title:"MessageBox",permalink:"/Ave-React-Docs/message-box"}},u=[{value:"Examples",id:"examples",children:[{value:"Basic",id:"example-basic",children:[]},{value:"Style",id:"example-style",children:[]},{value:"Status",id:"example-triple",children:[]},{value:"Text Color",id:"example-text-color",children:[]}]},{value:"Practice Solutions",id:"practice-solutions",children:[{value:"select all",id:"solution-select-all",children:[]}]}],p={toc:u};function h(e){var n=e.components,r=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,c.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"examples"},"Examples"),(0,l.kt)("h3",{id:"example-basic"},"Basic"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},'export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox\n                    text="Apple"\n                    onCheck={(sender) => {\n                        const checkValue = sender.GetValue();\n                        console.log(\n                            `check value: ${checkValue}(${CheckValue[checkValue]})`,\n                        );\n                    }}\n                ></CheckBox>\n            </DemoLayout>\n        </Window>\n    );\n}\n')),(0,l.kt)("p",null,"Usage:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"check box basic",src:t(1898).Z})),(0,l.kt)("p",null,"In console:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"check value: 1(Checked)\ncheck value: 0(Unchecked)\ncheck value: 1(Checked)\ncheck value: 0(Unchecked)\n")),(0,l.kt)("p",null,"Return false in ",(0,l.kt)("inlineCode",{parentName:"p"},"onChecking")," to cancel action. ",(0,l.kt)("inlineCode",{parentName:"p"},"onCheck")," will not be invoked in this case."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{14}","{14}":!0},'export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox\n                    text="Apple"\n                    onCheck={(sender) => {\n                        const checkValue = sender.GetValue();\n                        console.log(\n                            `check value: ${checkValue}(${CheckValue[checkValue]})`,\n                        );\n                    }}\n                    onChecking={(sender) => {\n                        return false;\n                    }}\n                ></CheckBox>\n            </DemoLayout>\n        </Window>\n    );\n}\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"check box on checking",src:t(6251).Z})),(0,l.kt)("h4",{id:"api-basic"},"API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBoxComponentProps extends IComponentProps {\n    text: string;\n    onCheck?: Parameters<ICheckBox['OnCheck']>[0];\n    onChecking?: Parameters<ICheckBox['OnChecking']>[0];\n}\n\nexport enum CheckValue {\n    Unchecked,\n    Checked,\n    Mixed,\n}\n")),(0,l.kt)("h3",{id:"example-style"},"Style"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx",metastring:"{8,14}","{8,14}":!0},"export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox\n                    text=\"Apple\"\n                    style={{\n                        visualStyle: CheckBoxStyle.Checking,\n                    }}\n                ></CheckBox>\n                <CheckBox\n                    text=\"Apple\"\n                    style={{\n                        visualStyle: CheckBoxStyle.Pushing,\n                    }}\n                ></CheckBox>\n            </DemoLayout>\n        </Window>\n    );\n}\n\ninterface IDemoLayoutProps {\n    children?: any[] | any;\n    width?: string;\n    height?: string;\n}\n\nfunction DemoLayout(props: IDemoLayoutProps) {\n    const width = props?.width ?? '120dpx';\n    const height = props?.height ?? '32dpx';\n\n    const demoLayout = {\n        columns: `1 ${width} ${width} ${width} 1`,\n        rows: `1 ${height} 1`,\n        areas: {\n            left: { row: 1, column: 1 },\n            right: { row: 1, column: 3 },\n        },\n    };\n    const [left, right] = props.children;\n    return (\n        <Grid style={{ layout: demoLayout }}>\n            <Grid style={{ area: demoLayout.areas.left }}>{left}</Grid>\n            <Grid style={{ area: demoLayout.areas.right }}>{right}</Grid>\n        </Grid>\n    );\n}\n")),(0,l.kt)("p",null,"Check box in button style:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"check box style",src:t(6718).Z})),(0,l.kt)("h4",{id:"api-style"},"API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBoxComponentProps extends IComponentProps {\n    style?: ICheckBoxStyle;\n}\n\nexport interface ICheckBoxStyle extends IComponentStyle {\n    visualStyle?: CheckBoxStyle;\n}\n\nexport enum CheckBoxStyle {\n    Checking,\n    Pushing,\n}\n")),(0,l.kt)("h3",{id:"example-triple"},"Status"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},'export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox text="Apple" triple></CheckBox>\n                <CheckBox\n                    text="Apple"\n                    triple\n                    style={{ visualStyle: CheckBoxStyle.Pushing }}\n                ></CheckBox>\n            </DemoLayout>\n        </Window>\n    );\n}\n')),(0,l.kt)("p",null,"Mixed status:"),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"check box triple",src:t(3143).Z})),(0,l.kt)("h4",{id:"api-style"},"API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBoxComponentProps extends IComponentProps {\n    triple?: boolean;\n}\n")),(0,l.kt)("h4",{id:"practice-select-all"},"Practice: select all"),(0,l.kt)("p",null,"In this practice, we will implement select-all: ",(0,l.kt)("a",{parentName:"p",href:"https://ant.design/components/checkbox/"},"Ant Design: CheckBox"),"."),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"check box practice select all",src:t(1391).Z})),(0,l.kt)("h3",{id:"example-text-color"},"Text Color"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},'export function App() {\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox\n                    text="Apple"\n                    style={{ color: new Vec4(0, 146, 255, 255 * 0.75) }}\n                ></CheckBox>\n            </DemoLayout>\n        </Window>\n    );\n}\n')),(0,l.kt)("p",null,(0,l.kt)("img",{alt:"check box text color",src:t(5367).Z})),(0,l.kt)("h4",{id:"api-text-color"},"API"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ICheckBoxComponentProps extends IComponentProps {\n    style?: ICheckBoxStyle;\n}\n\nexport interface ICheckBoxStyle extends IComponentStyle {\n    color?: Vec4;\n}\n")),(0,l.kt)("h2",{id:"practice-solutions"},"Practice Solutions"),(0,l.kt)("h3",{id:"solution-select-all"},"select all"),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},(0,l.kt)("a",{parentName:"p",href:"#practice-select-all"},"Practice description"))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"export function App() {\n    const options = ['React', 'Vue', 'Svelte'];\n    const [checkedSet, setCheckedSet] = useState(new Set<string>());\n    const [valueCheckAll, setValueCheckAll] = useState(CheckValue.Unchecked);\n\n    const onCheck: ICheckBoxComponentProps['onCheck'] = (sender) => {\n        const text = sender.GetText();\n        const checkValue = sender.GetValue();\n        const clone = new Set(checkedSet);\n\n        if (checkValue === CheckValue.Checked) {\n            clone.add(text);\n        } else if (checkValue === CheckValue.Unchecked) {\n            clone.delete(text);\n        }\n\n        setCheckedSet(clone);\n    };\n\n    const onCheckingAll: ICheckBoxComponentProps['onChecking'] = (sender) => {\n        const next = sender.GetNextValue();\n        if (\n            valueCheckAll === CheckValue.Unchecked &&\n            next === CheckValue.Checked\n        ) {\n            setCheckedSet(new Set(options));\n        } else if (\n            valueCheckAll === CheckValue.Checked &&\n            next === CheckValue.Mixed\n        ) {\n            setCheckedSet(new Set());\n        } else if (\n            valueCheckAll === CheckValue.Mixed &&\n            next === CheckValue.Unchecked\n        ) {\n            setCheckedSet(new Set(options));\n        }\n\n        return false;\n    };\n\n    useEffect(() => {\n        if (checkedSet.size === options.length) {\n            setValueCheckAll(CheckValue.Checked);\n        } else if (checkedSet.size === 0) {\n            setValueCheckAll(CheckValue.Unchecked);\n        } else {\n            setValueCheckAll(CheckValue.Mixed);\n        }\n    }, [checkedSet]);\n\n    return (\n        <Window>\n            <DemoLayout>\n                <CheckBox\n                    text=\"Use all\"\n                    triple\n                    value={valueCheckAll}\n                    onChecking={onCheckingAll}\n                ></CheckBox>\n                {...options.map((each) => (\n                    <CheckBox\n                        key={each}\n                        text={each}\n                        onCheck={onCheck}\n                        value={\n                            checkedSet.has(each)\n                                ? CheckValue.Checked\n                                : CheckValue.Unchecked\n                        }\n                    ></CheckBox>\n                ))}\n            </DemoLayout>\n        </Window>\n    );\n}\n\ninterface IDemoLayoutProps {\n    children?: any[] | any;\n    width?: string;\n    height?: string;\n}\n\nfunction DemoLayout(props: IDemoLayoutProps) {\n    const width = props?.width ?? '120dpx';\n    const height = props?.height ?? '32dpx';\n\n    const demoLayout = {\n        columns: `1 ${width} ${width} ${width} 1`,\n        rows: `1 ${height} ${height} 1`,\n        areas: {\n            useAll: { row: 1, column: 1 },\n            react: { row: 2, column: 1 },\n            vue: { row: 2, column: 2 },\n            svelte: { row: 2, column: 3 },\n        },\n    };\n    const [useAll, react, vue, svelte] = props.children;\n\n    return (\n        <Grid style={{ layout: demoLayout }}>\n            <Grid style={{ area: demoLayout.areas.useAll }}>{useAll}</Grid>\n            <Grid style={{ area: demoLayout.areas.react }}>{react}</Grid>\n            <Grid style={{ area: demoLayout.areas.vue }}>{vue}</Grid>\n            <Grid style={{ area: demoLayout.areas.svelte }}>{svelte}</Grid>\n        </Grid>\n    );\n}\n")))}h.isMDXComponent=!0},1898:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-basic-8cb2d31ff4ed8930c439ad12e43e6b73.gif"},6251:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-on-checking-e982e81ed35b87d65959de64fc5c754f.gif"},1391:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-practice-select-all-2fe73d84aba5d11b8b93384b3461ee3c.gif"},6718:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-style-2e3f81686888a9e222268b45ec929f50.gif"},5367:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-text-color-0c5efc1d56d546070e868c30e8c29b2d.gif"},3143:function(e,n,t){"use strict";n.Z=t.p+"assets/images/check-box-triple-edd8452bac65a3ab0bae8574a4d5cec2.gif"}}]);