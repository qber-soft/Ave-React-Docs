(self.webpackChunknode_ave_docs=self.webpackChunknode_ave_docs||[]).push([[590],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return m},kt:function(){return u}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),i=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},m=function(e){var n=i(e.components);return r.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=i(t),u=a,f=p["".concat(s,".").concat(u)]||p[u]||d[u]||o;return t?r.createElement(f,c(c({ref:n},m),{},{components:t})):r.createElement(f,c({ref:n},m))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=p;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,c[1]=l;for(var i=2;i<o;i++)c[i]=t[i];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},828:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return i},toc:function(){return m},default:function(){return p}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),c=["components"],l={id:"tree",title:"Tree"},s=void 0,i={unversionedId:"tree",id:"tree",isDocsHomePage:!1,title:"Tree",description:"Examples",source:"@site/docs/tree.md",sourceDirName:".",slug:"/tree",permalink:"/Ave-Nodejs-Docs/tree",version:"current",frontMatter:{id:"tree",title:"Tree"},sidebar:"components",previous:{title:"TrackBar",permalink:"/Ave-Nodejs-Docs/track-bar"},next:{title:"Picture",permalink:"/Ave-Nodejs-Docs/picture"}},m=[{value:"Examples",id:"examples",children:[{value:"Basic",id:"example-basic",children:[]}]}],d={toc:m};function p(e){var n=e.components,l=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},d,l,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("h3",{id:"example-basic"},"Basic"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{10-15,33,26,18}","{10-15,33,26,18}":!0},"import {\n    Window,\n    Tree,\n    TreeInsert,\n    TreeGenericHandle,\n    TreeItemFlag,\n} from 'ave-ui';\n\nexport function main(window: Window) {\n    const tree = new Tree(window);\n    tree.OnSelectionChange((sender) => {\n        const handler = sender.ItemGetSelection();\n        const treeItem = sender.ItemGet(handler);\n        console.log(`select ${treeItem.Text}`);\n    });\n\n    const A = new TreeInsert();\n    A.Parent = TreeGenericHandle.Root;\n    A.After = TreeGenericHandle.Last;\n    A.Item.Flag = TreeItemFlag.Text;\n    A.Item.Text = 'A';\n    const handlerA = tree.ItemInsert(A);\n\n    const B = new TreeInsert();\n    B.Parent = handlerA;\n    B.After = TreeGenericHandle.Last;\n    B.Item.Flag = TreeItemFlag.Text;\n    B.Item.Text = 'B';\n    tree.ItemInsert(B);\n\n    const C = new TreeInsert();\n    C.Parent = handlerA;\n    C.After = TreeGenericHandle.First;\n    C.Item.Flag = TreeItemFlag.Text;\n    C.Item.Text = 'C';\n    const handlerC = tree.ItemInsert(C);\n\n    const D = new TreeInsert();\n    D.Parent = handlerC;\n    D.After = TreeGenericHandle.Last;\n    D.Item.Flag = TreeItemFlag.Text;\n    D.Item.Text = 'D';\n    tree.ItemInsert(D);\n\n    const container = getControlDemoContainer(window, 1, 500, 300);\n    container.ControlAdd(tree).SetGrid(1, 1);\n    window.SetContent(container);\n}\n")),(0,o.kt)("p",null,"Usage:"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"tree basic",src:t(3682).Z})),(0,o.kt)("p",null,"In console:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"select A\nselect C\nselect D\nselect B\n")),(0,o.kt)("h4",{id:"api-basic"},"API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ITree extends IControl {\n    //\n    ItemInsert(pInsert: TreeInsert): TreeItemHandle;\n\n    // use handle returned from \"ItemInsert\"\n    ItemGet(pItem: TreeItemHandle): TreeItem;\n    // get handle of selected node\n    ItemGetSelection(): TreeItemHandle;\n\n    OnSelectionChange(fn: (sender: Tree) => void): Tree;\n}\n\n// description of node to insert\nexport class TreeInsert {\n    // parent node\n    Parent: TreeItemHandle = 0;\n    // about sort algorithm\n    After: TreeItemHandle = 0;\n    // data of tree node\n    Item: TreeItem = new TreeItem();\n}\n\n//\nexport class TreeGenericHandle {\n    // get handle of root\n    static get Root(): TreeItemHandle;\n    //\n    // First: this node, ..., ..., ...\n    // Last: ..., ..., ..., this node\n    static get First(): TreeItemHandle;\n    static get Last(): TreeItemHandle;\n    static get Sort(): TreeItemHandle;\n}\n\nexport class TreeItem {\n    Flag: TreeItemFlag = TreeItemFlag.None;\n    Icon: IconCache = 0;\n    // text content of node\n    Text: string = '';\n    Item: TreeItemHandle = 0;\n    Blank: boolean = false;\n}\n")))}p.isMDXComponent=!0},3682:function(e,n,t){"use strict";n.Z=t.p+"assets/images/tree-basic-e89f618d4e381804c3de8cb64cd69195.gif"}}]);